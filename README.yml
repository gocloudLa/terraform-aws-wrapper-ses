module_name: Terraform SES Email Module
module_description: The Terraform wrapper for SES simplifies the configuration of the SMTP Service in the AWS cloud. This wrapper functions as a predefined template, facilitating the creation and management of SES by handling all technical details.
module_badges:
  - url: "https://github.com/gocloudLa/terraform-aws-wrapper-ses/releases/latest"
    image: "https://img.shields.io/github/v/release/gocloudLa/terraform-aws-wrapper-ses.svg?style=for-the-badge"
    alt: "Latest Release"
  - url: ""
    image: "https://img.shields.io/github/last-commit/gocloudLa/terraform-aws-wrapper-ses.svg?style=for-the-badge"
    alt: "Last Commit"
  - url: "https://registry.terraform.io/modules/gocloudLa/wrapper-ses/aws"
    image: "https://img.shields.io/badge/Terraform-Registry-7B42BC?style=for-the-badge&logo=terraform&logoColor=white"
    alt: "Terraform Registry"
quick_start: |
  ```hcl
  ses_parameters = {
          "example.com" = {
          }
      }
  ```
features:
  - icon: ðŸ“§
    title: SES Notifications and Logging
    short_description: Enables Amazon SES notifications and logging for your domains.
    long_description: |
      This allows you to configure Amazon SES to send notifications for events such as Bounce, Complaint, or Delivery. 
      You can define custom SNS topics for each type of notification and optionally include original email headers. 
    examples:
      - title: Configuration Code
        code: |
          ```hcl
          ses_parameters = {
            "example.com" = {
              notification_topic = {
                "Bounce" = {
                  # topic_arn = "" # Default: sns_topic_alarms_notifications
                  # include_original_headers = true # Default: true
                }
                # "Complaint" = {}
                # "Delivery"  = {}
              }

              # default_sns_topic_name = "sns-topic-name" # Default: "${local.common_name}-alarms"
            }
          }
          ```
important_notes: |
  To enable Amazon SES, you first need to set up the domain. After the domain shows a verified status, you must open a support case to request the removal of the sandbox limitation for the region. In that case, you should submit the following text:
  ```hcl
  Use case description: We will use Amazon SES for sending emails to our future clients, the emails will consist of register, notification and transactional emails. 
  We will limit our emails only to customers and we will have a use case of 10 to 20 emails per day due to being for test purposes.
  Mail Type: TRANSACTIONAL
  The correct URL is: https://example.com/
  ```
input_table: |
  | zone_id | Route53 parent zone ID. The module will create Route53 DNS records used for verification. | `string` | `data.aws_route53_zone.ses[example.com].zone_id` | no |
  | verify_domain | If provided, the module will create Route53 DNS records used for domain verification. | `bool` | `true` | no |
  | verify_dkim | If provided, the module will create Route53 DNS records used for DKIM verification. | `bool` | `true` | no |
  | iam_name | IAM username. | `string` | `"ses-example.com"` | no |
  | create_secret | Controls whether to create a secret manager to store users created by SES. | `bool` | `true` | no |
  | description | Description to add to the secret. | `string` | `null` | no |
  | kms_key_id | Optional. The KMS Key ID to encrypt the secret. Can use KMS key ARN or alias. | `string` | `null` | no |
  | name | Name (omit to use name_prefix). | `string` | `"ses-example.com"` | no |
  | name_prefix | Name Prefix (not used if name specified). | `string` | `""` | no |
  | pass_version | Password version. Increment this to trigger a new password. | `string` | `"1"` | no |
  | notification_topic | Map of SES notification topic configurations. | `map` | `"{}"` | no |
